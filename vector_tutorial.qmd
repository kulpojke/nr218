# Vector Operations

## Buffer

::: {.r-stack}

::: {.fragment .absolute .fade-in-then-out data-fragment-index="1"}
![](img/buffer.png)
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index="2"}
![](img/ripar_buffer.jpg){style="max-height: 50vh;"}
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index="3"}

1. Open QGIS and open the 'sprStreams.geojson'
2. Vector --> Geoprocessing tools --> Buffer
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index="4"}
[Notice the Units!  Buffering in degrees makes no sense. Reproject it first! What is a good projection?]{style="font-size:0.7em"}

![](img/degree_buf.png){style="max-height: 50vh;"}
:::

:::

## Dissolve

![](img/dissolve.png)

1. In QGIS open  `sprSoil.geojson` 
2. Change symbology to categorical by "SOILNAME"
3. Vector --> Geoprocessing tools --> Dissolve
4. Use "HYDROGRPOUP" as dissolve field


## Clip
1. Vector --> Geoprocessing tools --> Clip
2. Clip the sprSoil by the streams buffer.
![](img/clip.png)


## Spatial overlays

::: {.r-stack}

::: {.fragment .absolute .fade-in-then-out .smaller}
1. Intersect soils with bufffer, look at attributes
2. Intersect buffer with soils, look at attributes

![](img/intersect.png)
:::

::: {.fragment .absolute .fade-in-then-out .smaller}
Union

![](img/union.png)
:::

::: {.fragment .absolute .fade-in-then-out .smaller}
Symmetric Difference  

+ Try it with buffer and soils

![](img/sym_diff.png)
:::


:::

## 

Check topology
`Vector --> Geometry --> Check Validity`



##

[Link to tutorial](https://docs.google.com/presentation/d/1vaN4vdtAwcynhPnTDlKepgfcfY5gTgemUoSrCZL0CmY/edit?usp=sharing) about editing vectors.

## Joins

::: {r-stack}

::: {.fragment .absolute .fade-in-then-out data-fragment-index="1"}
__Tabular joins__ join layers by matching a common column name (e.g., parcel_id or GEOID)

![](img/joins_image0.png){style="max-width: 90%; max-height: 60vh; object-fit: contain;"}
:::


::: {.fragment .absolute .fade-in-then-out data-fragment-index="2"}
Spatial joins transfer attributes based on how features relate in space (intersects, within, nearest)

![](img/spatial-join-basic-idea.png){style="max-width: 90%; max-height: 60vh; object-fit: contain;"}
:::

:::

## Tabular Joins {style="font-size:0.7em"}

1. Download [California Counties](https://github.com/kulpojke/nr218/blob/main/assets/cal_counties.geojson) and [median household income](https://github.com/kulpojke/nr218/blob/main/assets/cal_median_household.csv)

2. add the counties layer

3. add the income csv (you must select "no geometry (attribute only table)")

3. Open the attribute tables for each look at the names for the columns containing county name

4. In the Processing Toolbox search :join" and select "join attributes by field"
    + Input layer 1 is counties, input layer 2 is  
    + use appropriate column names

5. Look at the attribute table of the resulting layer

6. Change the symbology to make a thematic map showing median income by county.

## Spatial Joins {style="font-size:0.7em"}

__One-to-One Spatial Join__

+ Output: Each feature from the target layer (the primary layer) gets a single matching record from the join layer (secondary layer).
+ Handling Multiple Matches: If multiple matches are found, only one matching feature is selected (usually the first or based on criteria like nearest neighbor).
+ Example:Joining cities (target) with climate zones (join layer), ensuring each city gets only one associated climate zone.
__One-to-Many Spatial Join__

+ Output: If multiple matching features exist, the target feature is duplicated for each matching feature from the join layer.
+ Handling Multiple Matches: Every matching record from the join layer is included, leading to multiple rows for one target feature.
+ Example: Joining states (target) with cities (join layer). Each state will appear multiple times for every city within its boundaries.

## Merge vs Spatial Join

__Spatial Join__:  
 You might use a spatial join to combine data from a "census tracts" layer with a "crime incidents" layer to see the crime statistics within each census tract. 

__Merge__:  
You might use a merge to combine two adjacent land parcels into a single, larger parcel with a new boundary. 


## Spatial Joins {.smaller}

Download [Cities](https://gis.data.ca.gov/api/download/v1/items/8cd5d2038c5547ba911eea7bec48e28b/geojson?layers=2)


+ Use the "join attributes by location" tool from the geoprocessing toolbox to join cities to counties 
+ Why someone would do this particular join I don now know, but it illustrates the point.
+ There will be problems. Hint: "validate geometries and "fix geometries" tools will be useful.

__Challenge__ - Figure out how to join counties to cities, and calculate total urban area for each county.

