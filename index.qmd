---
format:
  revealjs:
    incremental: false 
jupyter: python3
echo: true
output-location: column
navigation-mode: vertical

---
# NR 218

Use arrows or menu in bottom left corner to navigate

# NR 218 - Introduction


## Class Details
+ _Location_  
+ Times:
  - [Monday:]{style="font-size:0.8em"}  
    [5:10 - 6:00 Lecture]{style="font-size:0.8em"}  
    [6:10 - 9:00 Lab]{style="font-size:0.8em"}  
  - [Wednesday]{style="font-size:0.8em"}  
    [6:10 - 9:00 Lab]{style="font-size:0.8em"}  


## Instructor Details
+ Michael Huggins
+ Office Hours:  
  - Building 72 (Plant Conservatory)
    Room 107  
    Mondays 2:30 - 4:30s  


## Learning Goals
+ Analyze spatial data  
+ Create maps using geospatial software
+ Produce quality graphics
+ Apply skills in Remote Sensing, GIS, and data science to solve a problem of your own design
+ Understand basic principles of GIS


## Active Learning and Growth Mindset
+ Learn by doing
+ Ask questions
+ Explore your interests


## Active Learning and Growth Mindset {style="font-size:0.5em"}
+ This class will be challenging - learning new skills is hard
+ Recognize that you won’t be good immediately
  - Mastery takes time and repetition
+ Ask for help!
  - Internet, classmates, professor (Try not to rely on AI)
+ Don’t be afraid to mess up
+ Crash the computer, it’s ok!
+ Think critically and logically, don’t get frustrated
+ There will be lots of hands-on work time in this class
+ Suggest bringing laptop if you have one

## Class Icebreaker

__Three things in common__

+ Get is small groups  
+ Take 5 minutes to identify three things you have in common with each other
  + Choose intresting things.  The stranger, the better
  + Boring examples:
    + "We are a forest and fire sciences majors"
    + "We are all from Southern California"

## What is GIS?

:::{.fragment}
Computer-based tools used to store, visualize, analyze, and interpret geographic data
:::

<p class="fragment fade-in-then-out">
  OR  
  Collection of computer hardware, software, data,
personnel, and work procedures to store, update,
manipulate, analyze, and display all forms of geographic
information. 
</p>

:::{.fragment}
![](img/qgis_logo.jpeg){.absolute top=200 left=0 width="75"}
![](img/qgis_screen.png){.absolute top=220 left=0 width="200"}
![](img/esri_logo.jpeg){.absolute top=425 right=325 width="100"}
:::

:::{.fragment}
![](img/grass-screen.jpeg){.absolute top=260 right=50 width="200"}
![](img/grass_logo.png){.absolute top=190 right=50 width="75"}
:::

:::{.fragment}
![](img/python_ecosytem.jpeg){.absolute top=220 left=210 width="275"}
![](img/R_ecosystem.jpeg){.absolute top=220 right=275 width="275"}
![](img/postgis.jpeg){.absolute top=425 left=325 width="200"}
:::


## Application Domains
GIS is useful is many domains, for example:  

::: {style="font-size: 0.45em"}
+ weather forecasts  
+ navigation  
+ delivery logisitics   
+ apps (e.g. Strava!)   
+ disaster response    
+ infrastructure monitoring   
+ climate monitoring / modeling   
+ urban/regional planning
+ architecture
+ archaeology
+ geography
+ social sciences
+ (geo)physics
+ hydrology
+ biology
+ ecology
+ etc...
:::


## Why use GIS

::: {r-stack}

::: {.fragment .fade-in-then-out style="position: absolute;"}
Monitor and understand our planet

![](img/Global_NDVI.gif){top=220 left=110 width="475"}
![](img/aralsea.png){top=150 right=0 width="275"}
:::

::: {.fragment .fade-in-then-out style="position: absolute;"}
Planning

![](img/urb_plan.png){width="575"}
:::


::: {.fragment .fade-in-then-out style="position: absolute;"}
Disaster Response

![](img/modis-fire.jpeg){top=220 left=110 width="475"}
![](img/disaster_movie.png){top=150 right=0 width="275"}
:::

:::


## Software{style="font-size: 0.5em"}
:::{.fragment}
+ This class will be taught using QGIS (but you can use anything you want)
+ Software changes - We will focus on building an understanding of the concepts that will allow you to successfully use any GIS software.
+ I will occasionally show examples of analysis using other tools, particularly Python.
:::

:::{.r-stack}
<p class="fragment fade-in-then-out">
There are many other common (GUI based) GIS  software platforms:  
  - [ESRI (ArcGIS suite)](https://www.geographyrealm.com/qgis-versus-arcgis/)  
  - [GRASS](https://en.wikipedia.org/wiki/GRASS_GIS)  
  - [Google Earth Engine](https://en.wikipedia.org/wiki/Google_Earth#Google_Earth_Engine)  
  - Google Earth Pro  
  - ENVI  
  - SAGA  
  - etc...  
  ![](img/qgis_screen.png){.absolute top=220 left=500 width="200"}
</p>

<p class="fragment fade-in-then-out">
There are also command line tools  
  - [GDAL](https://en.wikipedia.org/wiki/GDAL)  
  - PDAL  
  - WhiteBox Tools  
</p>

<p class="fragment fade-in-then-out">
Additionally, GIS can be performed purely using scripting languages  
  - Python  
  - R  
  - Javascript  
  - Julia  
</p>
:::


## Software - benefits of open source{.smaller}
+ Available to you, for free, forever (even after Cal Poly)
+ It’s free, as in liberty. If you need extra functionality in QGIS, you can do more than just hope it
will be included in the next release. You can sponsor the development of a feature, or add it
yourself if you are familiar with programming.
+ Compatible with any operating system (Windows, Mac, Linux)
+ Collectively advances human knowledge / progress
+ Commonly used in many organizations
+ Easier to learn ArcGIS after QGIS than the other way around

## Beautiful Maps
+ [QGIS Map gallery](https://www.flickr.com/groups/qgis/pool/)
+ [Oceano Dunes (using plas.io)](https://p3d.in/Z86TN) 
+ [Stackexchange thread of beautiful maps](https://gis.stackexchange.com/questions/3083/seeking-examples-of-beautiful-maps)
+ [Cal poly Tree map](https://calpoly.maps.arcgis.com/apps/webappviewer/index.html?id=49c730285d064d17be4c8429426d7609)

## Syllabus Review

# GIS Concepts

## Location

+ Position
+ A position on the surface of the earth
+ How do we define a location?
  + __Absolute Location__ - can be defined using Coordinates
    + X,Y,(Z) is the Cartesian coordinate system
    + Latitude and Longitude are the (non-projected )Geographic Coordinate System
  + __Nominal location__ - relative to something else
    + e.g. West of the Mississippi River

## Direction

The position of a feature of phenomenon on the surface of the earth
relative to some reference point

_536 meters north-west of the center of Mono Lake_

## Distance
+ The separation between locations
  + _Nominal_ (e.g. close/far) or _Absolute_ (1 kilometer)
+ Cartesian distance on a flat surface is easy:  
$$
D = \sqrt{(x_{2} - x_{1})^{2} + (x_{2} - x_{1})^{2}}
$$

+ Distance on a 3-Dimensional surface is complicated! Requires calculus.


## Space
For GIS we are mostrly interested in  _topological_ space
+ Positional relationships between places / nodes /objects
+ e.g. subway map 


## Navigation
Destination-oriented movement through space

## Layers
Models representing different aspects of the physical world
![](img/layers.png)

## Attributes


## Map Types
There are a few types of maps:

+ A  
+ B
+ Reference - shows location of an object
+ Thematic - shows how one or more factors are
distributed across space
+ Dynamic / Interactive - maps that change depending on user input

## Map Scale

## What is data? (_What are data?_) 
+ "Related items of (chiefly numerical) information considered collectively, typically obtained by scientific work and used for reference, analysis, or calculation."
+ "Quantities, characters, or symbols on which operations are performed by a computer, considered collectively. Also (in non-technical contexts): information in digital form."
-OED  

## What is information?
+ “The imparting of knowledge in general.”
+ “Knowledge communicated concerning some particular fact, subject, or event; that of which one is apprised or told; intelligence, news.”  
-OED

## What is Spatial Data?
:::{.fragment}
Data with a geographic and/or  spatial component.
:::

## What is Metadata
:::{.fragment}
Data about the data, e.g. units, date collected, instruments used...
:::

## Data Storage{style="font-size: 0.5em"}
+ We store data in computer-readable format in files
  + Sometimes files store data as text (often called human readable files) 
  + Other times there are just 1s and 0s (binary file)
  + Even the human readable files are ultimately stored as 1s and 0s ((want to know more)[https://www.totalphase.com/blog/2023/05/binary-ascii-relationship-differences-embedded-applications/?srsltid=AfmBOooKE_ehcrFst_V6Q5XtDbOnStzYrjjO0zrwIsDwYYa4M40rhBqW])


## Data Storage{style="font-size: 0.5em"}

_File extensions_ denote files readable by certain programs, for example:

| Extension | description       |
|------------------|------------|
| filename.txt     | text file |
| filename.doc     | Microsoft Word file |
| filename.pdf     | portable document file |
| filename.html    | hypertext markup language |
| filename.xml     | extensible markup language |
| filename.tif     | tagged image format |
| filename.json    | javascript object notation |
| filename.geojson | geographic json |
| filename.laz     | LASer zip |
| filename.parquet | compressed table |


## File types 
+ Computer programs only read certain file formats.
+ Familiarity with different file types is helpful.
+ Common GIS file types: .shp (and .prj, .shx, .dbf, etc), .kml, .tiff, .gpkg,
.json, .geojson, .txt, .hdf, .nc, .parquet and a few others

## File Organization and Computer Hygiene
:::{style="margin-right: 520px; font-size: 0.5em"}
Be kind to your future self - keep your files organized:

+ Use directories (a.k.a folders)
+ Use descriptive names:
  + e.g. `slo_county_26910.geojson` not `county.geojson`
+ Don't put spaces in file or directory names (see [this](https://authors.library.caltech.edu/records/mmnpf-cez11))
:::

![](https://imgs.xkcd.com/comics/documents.png){.absolute top=100 right=0 height=500}


## File Paths and Directories

:::{r-stack}
:::{.fragment .fade-in-then-out style="position: absolute;"}
![](img/linux-filesystem-hierarchy.png)
:::

:::{.fragment .fade-in-then-out style="position: absolute;"}
![](img/windows_dir_structure.jpg)
:::

:::{.fragment  style="position: absolute;"}
![](img/bash_paths.png)
![](img/gui_paths.png){width=600}
:::

:::{.fragment style="position: absolute; top: 165px; left: 0; width: 325px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::

## Human readable vs. binary files {.columns data-auto-animate="true"}
::: {.column width="50%"}
__Human Readable__

+ file.txt
+ [file.csv]{data-id="csv-item" style="padding: 2px 4px; border-radius: 3px;"}
+ file.xml
+ file.docx$^{*}$ 
+ file.json
+ filename.py

:::{style="font-size: 0.5em"}
\* actually, after unzipping a docx is a directory of xml files. Binary until unzipped. 
:::

:::

::: {.column width="50%"}
__Binary__

+ filename.pdf
+ filename.tif
+ filename.laz
+ filename.parquet
+ filename.pyc
:::


## Delimiters {data-auto-animate="true"}

:::{style="font-size: 0.6em"}
Data in a file are separated by a _delimiter_, such as a comma,
tab, space, etc. They also generaly have a header describing the contents of each row. For example a csv is a comma delimited file:
:::

+ [file.csv]{data-id="csv-item"}

:::{.fragment data-id="csv-item" style="padding: 2px 4px; border-radius: 3px;"}
```
OBJECTID,GlobalID,type,source,poly_DateCurrent,lon,lat
3025,04ba1d01-c043-478f-ad62-e7eeb903cf09,Heat Perimeter,FIRIS,2025-01-01 05:39:02.359000+00:00,-120.244,34.8824
3026,4551a5e4-e94d-46e2-9aac-73cc4314c946,Heat Perimeter,FIRIS,2025-01-02 05:16:55.340000+00:00,-116.83,32.5974
3027,2b1329f3-5b39-4c0e-ad34-1250e436e0e1,Heat Perimeter,FIRIS,2025-01-07 22:11:19.142000+00:00,-118.548,34.058
3028,a766c1b5-1d8e-43b3-9aac-02358de18d35,Heat Perimeter,FIRIS,2025-01-07 23:17:35.698000+00:00,-118.547,34.0589
3029,72049d43-03fe-4cc1-899a-fe2eb43934e7,Heat Perimeter,FIRIS,2025-01-07 23:17:39.454000+00:00,-118.547,34.0589
```
:::

:::{.fragment style="position: absolute; top: 268px; left: 2; width: 800px; height: 21px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::


## Reading a CSV {data-auto-animate="true"}
:::{data-id="csv-item"}
```
OBJECTID,GlobalID,type,source,poly_DateCurrent,lon,lat
3025,04ba1d01-c043-478f-ad62-e7eeb903cf09,Heat Perimeter,FIRIS,2025-01-01 05:39:02.359000+00:00,-120.244,34.8824
3026,4551a5e4-e94d-46e2-9aac-73cc4314c946,Heat Perimeter,FIRIS,2025-01-02 05:16:55.340000+00:00,-116.83,32.5974
3027,2b1329f3-5b39-4c0e-ad34-1250e436e0e1,Heat Perimeter,FIRIS,2025-01-07 22:11:19.142000+00:00,-118.548,34.058
3028,a766c1b5-1d8e-43b3-9aac-02358de18d35,Heat Perimeter,FIRIS,2025-01-07 23:17:35.698000+00:00,-118.547,34.0589
3029,72049d43-03fe-4cc1-899a-fe2eb43934e7,Heat Perimeter,FIRIS,2025-01-07 23:17:39.454000+00:00,-118.547,34.0589
```
:::

::: {style="font-size: 0.5em" data-id="link-item"}
[link to file](https://raw.githubusercontent.com/kulpojke/nr218/refs/heads/main/assets/CA_Perimeters_CAL_FIRE_NIFC_FIRIS_public_view_centroids.csv) (right-click and "save link as")  
__Tip:__ Remeber, file organization! 
:::

:::{style="font-size: 0.3em"}
This csv is adapted from [CA Perimeters CAL FIRE NIFC FIRIS public view ](https://data.ca.gov/dataset/ca-perimeters-cal-fire-nifc-firis-public-view).
:::

## Reading a CSV with QGIS {data-auto-animate="true"}
 
::: {style="font-size: 0.5em" data-id="link-item"}
[link to file](https://raw.githubusercontent.com/kulpojke/nr218/refs/heads/main/assets/CA_Perimeters_CAL_FIRE_NIFC_FIRIS_public_view_centroids.csv) (right-click and "save link as")  
:::

:::{r-stack}

:::{.fragment .fade-in-then-out data-fragment-index=1 style="position: absolute;"}
Either `Layer --> Add Layer -->> Add Delimited Text Layer`or press `control V` (command V on Mac)
:::

:::{.fragment .fade-in data-fragment-index=2 style="position: absolute;"}
![](img/qgis_data_source_manager.png){height="350"}
:::

:::{.fragment .fade-in data-fragment-index=3 style="position: absolute; top: 267px; left: 0; width: 150px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::


## Reading a CSV with QGIS {.columns data-auto-animate="true"}

::: {.column width="50%"}

:::{.fragment data-fragment-index=1 style="position: absolute;"}
![](img/qgis_data_source_manager_2.png){height="350"}
:::

:::{.fragment .fade-in-then-out data-fragment-index=2 style="position: absolute; top: 131px; left: 469px; width: 15px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in-then-out data-fragment-index=3 style="position: absolute; top: 430px; left: 100px; width: 90px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in-then-out data-fragment-index=5 style="position: absolute; top: 260px; left: 100px; width: 90px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in data-fragment-index=6 style="position: absolute;"}
![](img/qgis_data_source_manager_3.png){height="350"}
:::

:::{.fragment .fade-in data-fragment-index=6 style="position: absolute; top: 330px; left: 243px; width: 210px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::

::: {.column width="50%"}

:::{r-stack}

:::{.fragment .fade-in-then-out data-fragment-index=1 style="position: absolute;"}
Delimited text dialogue box
:::

:::{.fragment .fade-in-then-out data-fragment-index=2 style="position: absolute;"}
Browse for csv
:::

:::{.fragment .fade-in-then-out data-fragment-index=3 style="position: absolute;"}
[Notice that it says CRS must be selected.]{style="font-size: 0.5em"}

What _is_ a CRS?
:::

:::{.fragment .fade-in-then-out data-fragment-index=4 style="position: absolute;"}
::: {style="font-size: 0.6em"}
+ We will discuss what a CRS is in great detail later.
+ For now just know it __provides a reference frame for placing the coordinates on the map__.
+ Coordinate Reference System (CRS) is synonymous with Spatial Reference System (SRS)
+ __SRS = CRS__
:::
:::
 
:::{.fragment .fade-in-then-out data-fragment-index=5 style="position: absolute;"}
Here is how we will assign an SRS.
:::

::: {.fragment .fade-in data-fragment-index=6 style="position: absolute;"}
Use EPSG:4326 - WGS 84
:::

:::

:::