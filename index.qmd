---
format:
  revealjs:
    incremental: false
jupyter: python3
echo: true
output-location: column
navigation-mode: vertical


---
# NR 218

Use arrows or menu in bottom left corner to navigate

[Syllabus](calendar.html)

# NR 218 - Introduction


## Class Details
+ _Location_  
+ Times:
  - [Monday:]{style="font-size:0.8em"}  
    [5:10 - 6:00 Lecture]{style="font-size:0.8em"}  
    [6:10 - 9:00 Lab]{style="font-size:0.8em"}  
  - [Wednesday]{style="font-size:0.8em"}  
    [6:10 - 9:00 Lab]{style="font-size:0.8em"}  


## Instructor Details
+ Michael Huggins
+ Office Hours:  
  - Building 72 (Plant Conservatory)
    Room 107  
    Mondays 2:30 - 4:30s  


## Learning Goals
+ Analyze spatial data  
+ Create maps using geospatial software
+ Produce quality graphics
+ Apply skills in Remote Sensing, GIS, and data science to solve a problem of your own design
+ Understand basic principles of GIS


## Active Learning and Growth Mindset {auto-animate=true style="font-size:0.5em"}
+ This class will be challenging - learning new skills is hard
+ Recognize that you won’t be good immediately
  - Mastery takes time and repetition
+ Ask for help!
  - Internet, classmates, professor
  - ::: {style="margin-top: 0px;"}
  Try not to rely on AI
  :::
+ Don’t be afraid to mess up
+ Crash the computer, it’s ok!
+ Think critically and logically, don’t get frustrated
+ There will be lots of hands-on work time in this class
+ Suggest bringing laptop if you have one

## {auto-animate=true}
::: {style="margin-top: 10px; font-size: 2em;"}
Try not to rely on AI
:::

::: {style="font-size:0.5em"}
+ AI generated text [__may not be used for any writing__]{.fragment .highlight-current-red} .
+ It is ok to seek AI assistance for project work, but it is important to consider that AI has the potential to make you stupid and waste your time!
    + Depending on AI prevents development of critical thinking, writing, and problem-solving skills
    + AI will sometimes lead you down a terrible, deep rabbit hole of confusion
    + Getting quick answers without working through problems will leave gaps in foundational knowledge needed for advanced coursework
    + The struggle of working through difficult concepts is often where the most valuable learning occurs

That is not to say LLMs are never useful or appropriate to use, but you need to know its limitations.
:::


## Class Icebreaker

__Three things in common__

+ Get is small groups  
+ Take 5 minutes to identify three things you have in common with each other
  + Choose intresting things.  The stranger, the better
  + Boring examples:
    + "We are a forest and fire sciences majors"
    + "We are all from Southern California"

# What is GIS Why is it important

## What is GIS?

:::{.fragment}
Computer-based tools used to store, visualize, analyze, and interpret geographic data
:::

<p class="fragment fade-in-then-out">
  OR  
  Collection of computer hardware, software, data,
personnel, and work procedures to store, update,
manipulate, analyze, and display all forms of geographic
information. 
</p>

:::{.fragment}
![](img/qgis_logo.jpeg){.absolute top=200 left=0 width="75"}
![](img/qgis_screen.png){.absolute top=220 left=0 width="200"}
![](img/esri_logo.jpeg){.absolute top=425 right=325 width="100"}
:::

:::{.fragment}
![](img/grass-screen.jpeg){.absolute top=260 right=50 width="200"}
![](img/grass_logo.png){.absolute top=190 right=50 width="75"}
:::

:::{.fragment}
![](img/python_ecosytem.jpeg){.absolute top=220 left=210 width="275"}
![](img/R_ecosystem.jpeg){.absolute top=220 right=275 width="275"}
![](img/postgis.jpeg){.absolute top=425 left=325 width="200"}
:::


## Application Domains
GIS is useful is many domains, for example:  

::: {style="font-size: 0.45em"}
+ weather forecasts  
+ navigation  
+ delivery logisitics   
+ apps (e.g. Strava!)   
+ disaster response    
+ infrastructure monitoring   
+ climate monitoring / modeling   
+ urban/regional planning
+ architecture
+ archaeology
+ geography
+ social sciences
+ (geo)physics
+ hydrology
+ biology
+ ecology
+ etc...
:::


## Why use GIS

::: {r-stack}

::: {.fragment .fade-in-then-out style="position: absolute;"}
Monitor and understand our planet

![](img/Global_NDVI.gif){top=220 left=110 width="475"}
![](img/aralsea.png){top=150 right=0 width="275"}
:::

::: {.fragment .fade-in-then-out style="position: absolute;"}
Planning

![](img/urb_plan.png){width="575"}
:::


::: {.fragment .fade-in-then-out style="position: absolute;"}
Disaster Response

![](img/modis-fire.jpeg){top=220 left=110 width="475"}
![](img/disaster_movie.png){top=150 right=0 width="275"}
:::

:::


## Software{style="font-size: 0.5em"}
:::{.fragment}
+ This class will be taught using QGIS (but you can use anything you want)
+ Software changes - We will focus on building an understanding of the concepts that will allow you to successfully use any GIS software.
+ I will occasionally show examples of analysis using other tools, particularly Python.
:::

:::{.r-stack}
<p class="fragment fade-in-then-out">
There are many other common (GUI based) GIS  software platforms:  
  - [ESRI (ArcGIS suite)](https://www.geographyrealm.com/qgis-versus-arcgis/)  
  - [GRASS](https://en.wikipedia.org/wiki/GRASS_GIS)  
  - [Google Earth Engine](https://en.wikipedia.org/wiki/Google_Earth#Google_Earth_Engine)  
  - Google Earth Pro  
  - ENVI  
  - SAGA  
  - etc...  
  ![](img/qgis_screen.png){.absolute top=220 left=500 width="200"}
</p>

<p class="fragment fade-in-then-out">
There are also command line tools  
  - [GDAL](https://en.wikipedia.org/wiki/GDAL)  
  - PDAL  
  - WhiteBox Tools  
</p>

<p class="fragment fade-in-then-out">
Additionally, GIS can be performed purely using scripting languages  
  - Python  
  - R  
  - Javascript  
  - Julia  
</p>
:::


## Software - benefits of open source{.smaller}

+ Available to you, for free, forever (even after Cal Poly)
+ It’s free, as in liberty. If you need extra functionality in QGIS, you can do more than just hope it
will be included in the next release. You can sponsor the development of a feature, or add it
yourself if you are familiar with programming.
+ Compatible with any operating system (Windows, Mac, Linux)
+ Collectively advances human knowledge / progress
+ Commonly used in many organizations
+ Easier to learn ArcGIS after QGIS than the other way around

## Beautiful Maps
+ [QGIS Map gallery](https://www.flickr.com/groups/qgis/pool/)
+ [Oceano Dunes (using plas.io)](https://p3d.in/Z86TN) 
+ [Stackexchange thread of beautiful maps](https://gis.stackexchange.com/questions/3083/seeking-examples-of-beautiful-maps)
+ [Cal poly Tree map](https://calpoly.maps.arcgis.com/apps/webappviewer/index.html?id=49c730285d064d17be4c8429426d7609)



# Some basic GIS Concepts

## Location {style="font-size:0.5em"}

+ Position
+ A position on the surface of the earth
+ How do we define a location?
  + __Nominal location__ - By name
    + Helsinki, Finland
    + Appalachia

  + __Relative__
    + Oakland is east of San Francisco

  + __Absolute Location__ - can be defined using Coordinates
    + Postal Code
    + X,Y,(Z) is the Cartesian coordinate system
    + Latitude and Longitude are the (non-projected )Geographic Coordinate System
  
## Direction {style="font-size: 0.6em" auto-animate=true auto-animate-easing="ease-in-out"}



The position of a feature or phenomenon on the surface of the earth
relative to some reference point

+ Egocentric location, _to my left_
+ Landmark direction, _towards the mountain_

In geography and GIS, there are three more standard benchmarks that are used to define the directions:



[True north]{data-id="1"} (and south) is towards the point at which the axis of the
earth’s rotation intersects the earth’s surface

[Magnetic north]{data-id="2"} is towards where the Earth's magnetic fields merge in the North  

[Grid north]{data-id="3"} is the northward direction of the grid lines of latitude and longitude on a map

## {auto-animate=true auto-animate-easing="ease-in-out"}

::: {.absolute style="top: 10px; left: 50px; font-size: 0.8em;" data-id="1"}
True north
:::

::: {.absolute style="top: 10px; left: 50%; transform: translateX(-50%); font-size: 0.8em;" data-id="2"}
Magnetic north
:::

::: {.absolute style="top: 10px; right: 50px; font-size: 0.8em;" data-id="3"}
Grid north
:::

:::{.absolute style="top: 40px; left: 50px; font-size: 0.8em;" data-id="1"}
![](img/Utm-latlon_grid_en.svg.png){width=400px top=10 right=0}
:::

:::{.absolute style="top: 40px; right: 50px; font-size: 0.8em;" data-id="2"}
![](img/North_Magnetic_Poles.png){width=400px top=10}
:::





## Distance
+ The separation between locations
  + _Nominal_ (e.g. close/far) or _Absolute_ (1 kilometer)
+ Cartesian distance on a flat surface is easy:  
$$
D = \sqrt{(x_{2} - x_{1})^{2} + (x_{2} - x_{1})^{2}}
$$

+ Distance on a 3-Dimensional surface is complicated. We will discuss it later



## Space
Space is kind of an ambiguous term. 

For GIS we are often interested in  _topological_ space

+ Positional relationships between places / nodes /objects
+ e.g. subway map 


## Navigation
Destination-oriented movement through space. Relies on:

+ Landmark Knowledge
+ Route Knowledge
+ Survey knowledge


## GIS
All GIS systems have a database that can relate spatial-data and attribute data.

+ Spatial data is made up of points, lines, polygons, etc... which represent locations or features in the real world, e.g. a linestring representing a river.

+ Attributes are data associated with the features, e.g. the population ofa city. 

## Layers {style="font-size:0.6em"}
Models representing different aspects of the physical world
![](img/layers.png)

## Attributes {style="font-size:0.3em"}

```{python}
#| echo: false
import geopandas as gpd
from pathlib import Path
file = Path('assets/CA_Perimeters_CAL_FIRE_NIFC_FIRIS_public_view.geojson')
df = gpd.read_file(file)
df.head()
```
Attributes of `assets/CA_Perimeters_CAL_FIRE_NIFC_FIRIS_public_view.geojson`

##
![Right-click layer --> Open Attribute Table](img/qgis-attrubute-table.png)

## Map Types {.columns}
There are a few types of maps:

::: {.column width="50%"}
:::{r-stack}

:::{.fragment .fade-in-then-out style="position: absolute; font-size: 0.8em;" data-fragment-index="1"}
Mental Maps
:::

:::{.fragment .fade-in-then-out style="position: absolute; width: 50%; word-wrap: break-word; overflow-wrap: break-word; font-size: 0.8em;" data-fragment-index="2"}

Reference - shows location information, tend to represent geographic reality accurately, topographic maps for example
:::

:::{.fragment .fade-in-then-out style="position: absolute; width: 50%; word-wrap: break-word; overflow-wrap: break-word; font-size: 0.8em;" data-fragment-index="3"}

Thematic - shows how one or more factors are
distributed across space, such as a map of malaria infection rates
:::


:::
:::

::: {.column width="50%"}
:::{r-stack}

::: {.fragment .fade-in-then-out style="position: absolute;" data-fragment-index="2"}
![USGS Topographic Map of Boulder, CO](img/boulder-topo.png)
:::

::: {.fragment .fade-in-then-out style="position: absolute;" data-fragment-index="3"}
![European GDP](img/euro-gdp-map.png)
:::

:::
:::

::: {.fragment .fade-in style="position: absolute top=0; font-size:0.5em" data-fragment-index="4"}
__Dynamic / Interactive__  
- maps that change depending on user input
```{python}
#| echo: true
#| code-fold: true
#| code-summary: "Show code"

from pathlib import Path

import folium
import geopandas as gpd

aoi_path = Path('assets/Eaton_Perimeter_20250121.geojson')
aoi = gpd.read_file(aoi_path)

# grab centroids
c = aoi.to_crs(epsg=26910).dissolve().centroid.to_crs(epsg=4326).item()

# map
map = folium.Map(
  location=[c.y, c.x],
  tiles='OpenStreetMap',
  zoom_start=12
)

# perimeter
geo_j = folium.GeoJson(data=aoi.__geo_interface__,
  style_function=lambda feature: {
    'color': 'red',
    'weight': 2,
    'fill': False,
    },
    name='Fire Perimeter'
  ).add_to(map)
# layer control

map
```

:::



## Mental/Cognitive Maps

+ Psychological tools that we all use every day. 
+ Stored in our brain
+ To get from one place to another, or to understand and situate events that we hear about
+ Reflect the amount and extent of geographic knowledge and spatial awareness that we possess

Using a blank sheet of paper, take five minutes to
draw a map from memory of San Luis Obispo








## What is data? (_What are data?_) 
+ "Related items of (chiefly numerical) information considered collectively, typically obtained by scientific work and used for reference, analysis, or calculation."
+ "Quantities, characters, or symbols on which operations are performed by a computer, considered collectively. Also (in non-technical contexts): information in digital form."
-OED  

## What is information?
+ “The imparting of knowledge in general.”
+ “Knowledge communicated concerning some particular fact, subject, or event; that of which one is apprised or told; intelligence, news.”  
-OED

## What is Spatial Data?
:::{.fragment}
Data with a geographic and/or  spatial component.
:::

## What is Metadata
:::{.fragment}
Data about the data, e.g. units, date collected, instruments used...
:::

## 
Checkout Ticket - Some Basic GIS Concepts

```{=html}
<div class="passphrase-container" style="text-align: center; margin-top: 50px;">
    <input type="password" id="passphraseInput" style="padding: 10px; font-size: 1.2em; border: 2px solid #ccc; border-radius: 5px; margin: 10px; width: 300px;" placeholder="Enter passphrase...">
    <br>
    <button onclick="checkPassphrase()" style="padding: 10px 20px; font-size: 1.2em; background-color: #007acc; color: white; border: none; border-radius: 5px; cursor: pointer; margin: 10px;">Submit</button>
    
    <div id="response" style="margin-top: 20px; padding: 15px; border-radius: 5px; font-size: 1.1em; display: none;"></div>
</div>

<script>
function checkPassphrase() {
    const input = document.getElementById('passphraseInput');
    const response = document.getElementById('response');
    const passphrase = input.value.toLowerCase().trim();
    
    const passphrases = {
        'sajaboys': 'Are the concepts of true north, magnetic north, and grid north more important for reference maps or thematic maps?  Why?.',
    };
    
    response.style.display = 'block';
    
    if (passphrases[passphrase]) {
        response.style.backgroundColor = '#d4edda';
        response.style.color = '#155724';
        response.textContent = passphrases[passphrase];
    } else {
        response.style.backgroundColor = '#f8d7da';
        response.style.color = '#721c24';
        response.textContent = 'Incorrect passphrase. Try again!';
    }
    
    input.value = '';
}
</script>
```

# Data storage - A superficial Overview

## Data Storage{style="font-size: 0.5em"}
+ We store data in computer-readable format in files
  + Sometimes files store data as text (often called human readable files) 
  + Other times there are just 1s and 0s (binary file)
  + Even the human readable files are ultimately stored as 1s and 0s ([more on that](https://www.totalphase.com/blog/2023/05/binary-ascii-relationship-differences-embedded-applications/?srsltid=AfmBOooKE_ehcrFst_V6Q5XtDbOnStzYrjjO0zrwIsDwYYa4M40rhBqW))


::: {r-stack}
::: {.fragment .absolute .fade-in-then-out}
![](img/utf8.png)
:::

::: {.fragment .absolute .fade-in-then-out}
![](img/malloc.png)
:::

::: {.fragment .absolute .fade-in-then-out}
![](img/smallMemory_cellMatrixSmall.gif)
:::

::: {.fragment .absolute .fade-in-then-out}
![](img/utf8.png)
:::

:::

## Data Storage{style="font-size: 0.5em"}

_File extensions_ denote files readable by certain programs, for example:

| Extension | description       |
|------------------|------------|
| filename.txt     | text file |
| filename.doc     | Microsoft Word file |
| filename.pdf     | portable document file |
| filename.html    | hypertext markup language |
| filename.xml     | extensible markup language |
| filename.tif     | tagged image format |
| filename.json    | javascript object notation |
| filename.geojson | geographic json |
| filename.laz     | LASer zip |
| filename.parquet | compressed table |


## File types 
+ Computer programs only read certain file formats.
+ Familiarity with different file types is helpful.
+ Common GIS file types: .shp (along with its _sidecar files_ .prj, .shx, .dbf, etc), .kml, .tiff, .gpkg,
.json, .geojson, .txt, .hdf, .nc, .parquet and a few others


## File Paths and Directories

:::{r-stack}
:::{.fragment .fade-in-then-out style="position: absolute;"}
![](img/linux-filesystem-hierarchy.png)
:::

:::{.fragment .fade-in-then-out style="position: absolute;"}
![](img/windows_dir_structure.jpg)
:::

:::{.fragment  style="position: absolute;"}
![](img/bash_paths.png)
![](img/gui_paths.png){width=600}
:::

:::{.fragment style="position: absolute; top: 165px; left: 0; width: 325px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::

## File Organization and Computer Hygiene
:::{style="margin-right: 520px; font-size: 0.5em"}
Be kind to your future self - keep your files organized:

+ Use directories (a.k.a folders)
+ Use descriptive names:
  + e.g. `slo_county_26910.geojson` not `county.geojson`
+ Don't put spaces in file or directory names (see [this](https://authors.library.caltech.edu/records/mmnpf-cez11))
:::

![](https://imgs.xkcd.com/comics/documents.png){.absolute top=100 right=0 height=500}

## How to Organize your files {style="font-size:0.5em"}
+ Pick a convention and be consistent
+ For example:

```
/Work/NR_classes/
├── Class1/
│   └── ...
├── NR218/
│   ├── Project_1/
│   │   └── ...
│   └── Project_2/
│       ├── Vector/
│       │   ├── trees.parquet
│       │   └── streams.geogjson
|       ├── Raster/
│       │   ├── dem.tif
│       │   └── rainfall.h5
│       ├── qgis/
│       │   └── project_2.qmd
│       └── Results/
│           ├── Figures/
│           │   ├── figure1.png
│           │   ├── figure2.png
│           │   └── map.png
│           └── proj_2_report.doc
```

## Cloud Storage

Many options, but mounting Cal Poly One Drive as a disk is is probably the simplest. 

See the Cal Poly  tutorial [here](https://calpoly.atlassian.net/wiki/spaces/CPKB/pages/732921936/Access+OneDrive+and+SharePoint+from+my+Computer )
or try [this](https://github.com/rclone/rclone), for Linux users or the computer savvy.

# Tutorial - (not so) Quick Intro to QGIS 

## 

1) Download `SPR_data.zip` from the files section of canvas
2) Extract the file ([Linux](https://linuxize.com/post/how-to-unzip-files-in-linux/), [Windows](https://support.microsoft.com/en-us/windows/zip-and-unzip-files-8d28fa72-f2f9-712f-67df-f80cf89fd4e5), [Mac](https://support.apple.com/guide/mac-help/zip-and-unzip-files-and-folders-on-mac-mchlp2528/mac)), and place in appropriate file location (Remember, organize your files!)
3) Open QGIS  

![](img/Qgis-icon-3.0.png)

## {.columns}
[Open the files from the directory you just extracted]{style="font-size:0.8em"}

::: {.column style="font-size:0.5em"}
__Method 1__  

1. Use the file location in the ‘Browser’ panel  
2. Drag and and drop files into the _Layers_ Panel
![](img/qgis-file-location-browser-panel.png){height="350px"}
:::

::: {.column style="font-size:0.5em"}
__Method 2__  

1. Press `ctrl-v` (`cmd-v` on Mac)
2. Click ![](img/browse_button.png){style="vertical-align: middle;"} to browse for file then click ![](img/add_button.png){style="vertical-align: middle;"}.
    + [You can select multiple files at once when browsing]{style="font-size:0.5em"}
    + [Close window when finished.]{style="font-size:0.5em"}
![](img/qgis_data_source_manager.png)

:::

## {auto-animate="true"}
[Now the layers should be visible in the panel, and on the map]{style="font-size:0.9em"}

::: {.fragment .fade-in-then-out}
![](img/layers_panel.png){data-id="layers"}
:::

::: {.fragment .fade-in style="position: absolute; right: 50px; top: 100px;"}
![](img/layers_panel.png){data-id="layers" style="height: 275px;"}
:::

::: {.fragment .incremental .fade-in style="position: absolute; left: 20px; bottom: 110px; font-size:0.5em"}
+ Toggle on/off layers by clicking checkboxes
+ Change layer order by dragging within panel
+ What do the little icons between the check and the layer name mean?
+ Right click a layer, select _Open Attribute Table_
+ Select rows of attribute table by clicking on the left edge (where they are numbered)
  + Note that the corresponding features are highlighted on the map 
:::


## {auto-animate="true"}

![](img/layers_panel.png){data-id="layers"}

<!-- red boxes -->
:::{.fragment .fade-in-then-out data-fragment-index="1" style="position: absolute; top: 50px; left: 120px; width: 165px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in-then-out data-fragment-index="2" style="position: absolute; top: 50px; left: 415px; width: 115px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in-then-out data-fragment-index="3" style="position: absolute; top: 50px; left: 530px; width: 20px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

<!-- Words -->
::: {r-stack}
::: {.fragment .absolute .fade-in-then-out data-fragment-index="1"}
[__Panning and zooming__ (The mouse wheel also zooms while in pan mode)]{style="font-size:0.7em; color: red"}
:::

::: {.fragment  .absolute .fade-in-then-out data-fragment-index="2"}
[__Select tools__]{style="font-size:0.7em; color: red"}
:::

::: {.fragment  .absolute .fade-in-then-out data-fragment-index="3"}
[__Info__]{style="font-size:0.7em; color: red"}
:::

:::

## Basemaps {.columns}

::: {.column width="50%" style="font-size:0.5em"}
1. Click Plugins --> Manage and install Plugins
2. Search for _QuickMapServices_
3. Click _Install Plugin_
4. Now on the right there should be a _Search QMS_ bar  
5. Search for satellite
6. Pick one (ESRI is a good choice, or Bing)
:::

::: {.column width="50%"}

![](img/search_qms.png){height="600px"}
:::


## Symbology - categorized {.columns}

::: {.column width="50%"}

::: {.fragment .fade-in-then-semi-out data-fragment-index="1" style="font-size:0.7em"}
+ Right click the "sprLanduse" layer  
  + Go to properties
    + Select the symbology tab
:::

::: {.fragment .fade-in-then-semi-out data-fragment-index="2" style="font-size:0.6em"}
+ Experiment with basic symbology
  + Right click the "sprLanduse" layer
    + Go to properties
      + Select the symbology tab
        + From the dropdown menu, select "categorized" 
          + Select "LUtype" from the "Value" dropdown menu, and click "Classify"
:::

:::

::: {.column width="50%"}

::: {.r-stack}
::: {.fragment .fade-in-then-out data-fragment-index="1"}
![](img/symbology.png){style="height: 45vh; width: auto; max-width: 100%; object-fit: contain;"}
:::

::: {.fragment .fade-in-then-out data-fragment-index="2" style="display: flex; flex-direction: column; align-items: center; gap: 10px;"}
![](img/cat1.png){style="height: 25vh; width: auto; max-width: 100%; object-fit: contain;"}
![](img/cat2.png){style="height: 25vh; width: auto; max-width: 100%; object-fit: contain;"}
![](img/cat3.png){style="height: 25vh; width: auto; max-width: 100%; object-fit: contain;"}
:::

:::

:::

## Symbology - Numerical {.columns style="font-size:0.7em"}

::: {.column width="50%"}

+ Experiment with numerical symbology 
  + Right click the “sprSoil” layer
    + go to properties
      + Select the symbology tab
        + From the dropdown menu, select “Graduated”
          + Select “KFACTOR” from the “Value” dropdown menu
            + click “Classify”, then “Apply”

:::

::: {.column width="50%"}
![](img/numerical.png){style="height: 60vh; width: auto; max-width: 100%; object-fit: contain;"}
:::

## Print Layout For Maps {style="font-size:0.8em"}

+ Click Project > “New Print Layout”
  + Give it a name and click “OK”
    +  Click  _add map_ (![](img/add_map_button.png))
      + Click and drag a box onto the map canvas    
      to draw a box.  This is where the map will  
      be positioned
        + To reposition things use _move item content_ (![](img/move_item_item_content_button.png){style="vertical-align: middle;"})
          + Click and drag map to pan
          + Scroll with mouse wheel to change zoom (hold control for finer control)


## Print Layout - Add Legend {.columns}

::: {r-stack}

::: {.fragment .absolute .fade-in-then-out data-fragment-index="1" style="font-size:0.45em; max-width:35%" }
Add a Legend:

+ Click the _add legend_ button (![](img/add_legend_button.png){style="vertical-align: middle;"}), or from drop down menu _Add Item > Add Legend_
  + Draw a box to position the legend
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index="2" style="font-size:0.45em; max-width:35%"}
Edit legend items by going to _Item Properties > Legend Items_, and unchecking _Auto Update_
:::

::: {.fragment .absolute .fade-in data-fragment-index="3" style="font-size:0.45em; max-width:35%"}
Buttons will appear to add or remove items
![](img/legend_editing.png)
:::

::: {.column width="35%"}


:::

::: {.column width="65%"}
![](img/map_layout.png){right="5px"}
:::

:::{.fragment .fade-in-then-out data-fragment-index="2" style="position: absolute; top: 158px; right
: 85px; width: 45px; height: 10px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::


## Other elements
Use the _Add Item_ dropdown, or the left side toolbar to add a scale bar, and north arrow


## Coordinate Grids

+ Be sure you have the _Map_ item selected in the _items_ box. 
  + Select the _Item Properties_ tab
    + Scroll down and expand _Grids_
      + Click green + Button to add grid
        + Click _Modify Grid_
          + Enter “0.03” for the X and Y intervals
            + Check the _Draw Coordinates_ box to label grids with coordinates. 

## Export map

+ Once you have something satisfactory, create an export of your map to share. 
  + Layout > Export as image
    + Choose file type
      + Set save location

Open the image file we just saved to verify results

## 
What Are some problems here

![](img/bad_colors_scheme.png)














# A quick intro to geospatial data 


## Human readable vs. binary files {.columns data-auto-animate="true" style="font-size: 0.6em"}
::: {.column width="50%"}
__Human Readable__

+ file.txt
+ [file.csv]{data-id="csv-item" style="padding: 2px 4px; border-radius: 3px;"}
+ file.xml
+ file.docx[^1] 
+ file.json
+ filename.py


[^1]: Actually, a docx is a binary until its unzipped, then it is just a directory of xml files. 


:::

::: {.column width="50%"}
__Binary__

+ filename.pdf
+ filename.tif
+ filename.laz
+ filename.parquet
+ filename.pyc
:::


## Delimiters {data-auto-animate="true"}

:::{style="font-size: 0.6em"}
Data entries in many text files are separated by a _delimiter_, such as a comma,
tab, space, etc. They also generally have a header describing the contents of each row. For example a csv is a comma delimited file:
:::

+ [file.csv]{data-id="csv-item"}

:::{.fragment data-id="csv-item" style="padding: 2px 4px; border-radius: 3px;"}
```
OBJECTID,GlobalID,type,source,poly_DateCurrent,lon,lat
3025,04ba1d01-c043-478f-ad62-e7eeb903cf09,Heat Perimeter,FIRIS,2025-01-01 05:39:02.359000+00:00,-120.244,34.8824
3026,4551a5e4-e94d-46e2-9aac-73cc4314c946,Heat Perimeter,FIRIS,2025-01-02 05:16:55.340000+00:00,-116.83,32.5974
3027,2b1329f3-5b39-4c0e-ad34-1250e436e0e1,Heat Perimeter,FIRIS,2025-01-07 22:11:19.142000+00:00,-118.548,34.058
3028,a766c1b5-1d8e-43b3-9aac-02358de18d35,Heat Perimeter,FIRIS,2025-01-07 23:17:35.698000+00:00,-118.547,34.0589
3029,72049d43-03fe-4cc1-899a-fe2eb43934e7,Heat Perimeter,FIRIS,2025-01-07 23:17:39.454000+00:00,-118.547,34.0589
```
:::

:::{.fragment style="position: absolute; top: 298px; left: 2; width: 800px; height: 21px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::


## Reading a CSV {data-auto-animate="true"}
:::{data-id="csv-item"}
```
OBJECTID,GlobalID,type,source,poly_DateCurrent,lon,lat
3025,04ba1d01-c043-478f-ad62-e7eeb903cf09,Heat Perimeter,FIRIS,2025-01-01 05:39:02.359000+00:00,-120.244,34.8824
3026,4551a5e4-e94d-46e2-9aac-73cc4314c946,Heat Perimeter,FIRIS,2025-01-02 05:16:55.340000+00:00,-116.83,32.5974
3027,2b1329f3-5b39-4c0e-ad34-1250e436e0e1,Heat Perimeter,FIRIS,2025-01-07 22:11:19.142000+00:00,-118.548,34.058
3028,a766c1b5-1d8e-43b3-9aac-02358de18d35,Heat Perimeter,FIRIS,2025-01-07 23:17:35.698000+00:00,-118.547,34.0589
3029,72049d43-03fe-4cc1-899a-fe2eb43934e7,Heat Perimeter,FIRIS,2025-01-07 23:17:39.454000+00:00,-118.547,34.0589
```
:::

::: {style="font-size: 0.5em" data-id="link-item"}
[link to file](https://raw.githubusercontent.com/kulpojke/nr218/refs/heads/main/assets/CA_Perimeters_CAL_FIRE_NIFC_FIRIS_public_view_centroids.csv) (right-click and "save link as")  
__Tip:__ Remeber, file organization! 
:::

:::{style="font-size: 0.3em"}
This csv is adapted from [CA Perimeters CAL FIRE NIFC FIRIS public view ](https://data.ca.gov/dataset/ca-perimeters-cal-fire-nifc-firis-public-view).
:::

## Reading a CSV with QGIS {data-auto-animate="true"}
 
::: {style="font-size: 0.5em" data-id="link-item"}
[link to file](https://raw.githubusercontent.com/kulpojke/nr218/refs/heads/main/assets/CA_Perimeters_CAL_FIRE_NIFC_FIRIS_public_view_centroids.csv) (right-click and "save link as")  
:::

:::{r-stack}

:::{.fragment .fade-in-then-out data-fragment-index=1 style="position: absolute;"}
Either `Layer --> Add Layer -->> Add Delimited Text Layer`or press `control V` (command V on Mac)
:::

:::{.fragment .fade-in data-fragment-index=2 style="position: absolute;"}
![](img/qgis_data_source_manager.png){height="350"}
:::

:::{.fragment .fade-in data-fragment-index=3 style="position: absolute; top: 267px; left: 0; width: 150px; height: 20px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::


## Reading a CSV with QGIS {.columns data-auto-animate="true"}

::: {.column width="50%"}

:::{.fragment data-fragment-index=1 style="position: absolute;"}
![](img/qgis_data_source_manager_2.png){height="350"}
:::

:::{.fragment .fade-in-then-out data-fragment-index=2 style="position: absolute; top: 131px; left: 469px; width: 15px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in-then-out data-fragment-index=3 style="position: absolute; top: 430px; left: 100px; width: 90px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in-then-out data-fragment-index=5 style="position: absolute; top: 260px; left: 100px; width: 90px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::{.fragment .fade-in data-fragment-index=6 style="position: absolute;"}
![](img/qgis_data_source_manager_3.png){height="350"}
:::

:::{.fragment .fade-in data-fragment-index=6 style="position: absolute; top: 330px; left: 243px; width: 210px; height: 16px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"}
:::

:::

::: {.column width="50%"}

:::{r-stack}

:::{.fragment .fade-in-then-out data-fragment-index=1 style="position: absolute;"}
Delimited text dialogue box
:::

:::{.fragment .fade-in-then-out data-fragment-index=2 style="position: absolute;"}
Browse for csv
:::

:::{.fragment .fade-in-then-out data-fragment-index=3 style="position: absolute;"}
[Notice that it says CRS must be selected.]{style="font-size: 0.5em"}

What _is_ a CRS?
:::

:::{.fragment .fade-in-then-out data-fragment-index=4 style="position: absolute;"}
::: {style="font-size: 0.6em"}
+ We will discuss what a CRS is in great detail later.
+ For now just know it __provides a reference frame for placing the coordinates on the map__.
+ Coordinate Reference System (CRS) is synonymous with Spatial Reference System (SRS)
+ __SRS = CRS__
:::
:::
 
:::{.fragment .fade-in-then-out data-fragment-index=5 style="position: absolute;"}
Click the _Geometry Definition_ dropdown to assign an SRS.
:::

::: {.fragment .fade-in data-fragment-index=6 style="position: absolute;"}
Use EPSG:4326 - WGS 84

Click Add

:::

:::

:::





# Scale, Coordinate systems, and Map Projections



## Map Conventions 

Mapping conventions facilitate effective conveyance of information.  In most cases using them is a good idea ([but not necessarily always](https://www.storybench.org/mapbreaking-why-cartographic-flaws-can-sometimes-be-a-good-thing/))

:::: {.columns}
::: {.column width="30%"}
::: {.figure style="text-align: center; margin: 0 auto;"}
  ![](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Apollo_17_Blue_Marble_original_orientation_%28AS17-148-22727%29.jpg/250px-Apollo_17_Blue_Marble_original_orientation_%28AS17-148-22727%29.jpg)

::: {.figure-caption style="font-size: 0.4em; color: #888;"}
[The Blue Marble photograph](https://en.wikipedia.org/wiki/The_Blue_Marble) in its original orientation.
:::
:::
:::

::: {.column width="70%"}
::: {.figure style="text-align: center; margin: 0 auto;"}
![](img/upsouth.jpeg){style="height: 250px;"}

::: {.figure-caption style="font-size: 0.4em; color: #888;"}
South's up!  
:::
:::
:::

::::

## Map Scale {style="font-size:0.5em"}
The factor of reduction of the world so it fits on a map  

::: {.incremental}
  + You need to shrink things to make a map
  + On reference maps it is generally important to include a scale bar  
  ![](img/scale-bar.png){style="height: 175px;"}
  + Representative fraction (RF) describes scale as a simple ratio 
    <div style="position: absolute; top: 267px; left: 165px; width: 80px; height: 14px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"></div>
    + The numerator, which is always unity (i.e., 1), denotes map distance.  
    The denominator denotes ground or “real-world” distance.
    + unit neutral
    + Large vs small, 1:1,000 > 1:1,000,000
    + Large shows more detail
:::

## Map Scale {style="font-size:0.5em"}

::: {.figure style="text-align: center; margin: 0 auto;"}
  ![](img/scale-bar.png){style="height: 400px;"}
:::

::: {.incremental}
+ <div class="fragment fade-out" style="position: absolute; top: 313px; left: 95px; width: 830px; height: 100px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"></div>
+ <div class="fragment fade-in-then-out" style="position: absolute; top: 413px; left: 300px; width: 400px; height: 38px; border: 2px solid red; background: rgba(255,0,0,0.2); pointer-events: none;"></div>

:::

## Coordinate systems {.smaller}

+ Frameworks that are used to define unique positions
+ Geographic coordinate system (GCS) is most commonly used framework for defining locations on three dimensional models of  Earth
+ GCS is based on a sphere or spheroid (a.k.a. ellipsoid)
+ GCS units are degrees
  + Latitude $\in 0^\circ, 90^\circ$ (or $-90^\circ, 90^\circ$)
  + Longitude $\in 0^\circ, 180^\circ$ (or $-180^\circ, 180^\circ$)
+  Degrees can be written in degrees-minutes-seconds (DMS) or in decimal
degrees (DD). 


## DMS to DD conversion {.smaller .columns}

::: {.column width="40%"}

::: {r-stack}
::: {.fragment .absolute .fade-in-then-out data-fragment-index=1 style="text-align: center; font-size:1.2em"}
128° 40' 52.0428" W
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index=2 style="text-align: center; font-size:1.2em"}
<span style="color: red;">128°</span> 40' 52.0428" W
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index=3 style="text-align: center; font-size:1.2em"}
128°  <span style="color: red;">40'</span> 52.0428" W
:::

::: {.fragment .absolute  .fade-in-then-out data-fragment-index=4 style="text-align: center; font-size:1.2em"}
128° 40'  <span style="color: red;">52.0428"</span> W
:::

::: {.fragment .absolute  .fade-in-then-out data-fragment-index=5 style="text-align: center; font-size:1.2em"}
128° 40' 52.0428" <span style="color: red;">W</span>
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index=6 style="text-align: center; font-size:1.2em"}
![](img/slo-not-slo.png)
:::


:::

:::

::: {.column width="60%"}

::: {r-stack}
::: {.fragment .absolute .fade-in-then-out data-fragment-index=2 style="text-align: center; font-size:1.2em"}
<span style="color: red;">128</span>
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index=3 style="text-align: center; font-size:1.2em"}
128  + <span style="color: red;">(40 / 60)</span>
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index=4 style="text-align: center; font-size:1.2em"}
128  + (40 / 60) + <span style="color: red;">( 52.0428 / 60$^{2}$ )</span>
:::

::: {.fragment .absolute .fade-in-then-out data-fragment-index=5 style="text-align: center; font-size:1.2em"}
<span style="color: red;">-</span>128.68112299
:::

:::
:::

::: {.fragment  .fade-in-then-out data-fragment-index=6 style="text-align: center; font-size:1.5em"}
<span style="color: red;">The negative is important!</span> SLO vs. off the coast of Shandong
:::

## Spheroids and Geoids {.columns .incremental style="font-size:0.6em"}

::: {.column width="40%"}

::: {.r-stack style="margin-bottom: 60px; width: 40%;"}
::: {.fragment .absolute .fade-in-then-out data-fragment-index=1}
GCS is based on a sphere, spheroid, or geoid
:::

::: {.fragment .absolute .fade-in data-fragment-index=2}
A __geoid__ is an approximation of the true shape of the earth
:::    
:::

::: {.fragment .fade-in data-fragment-index=3 style="font-size:0.6em"}    
&nbsp;&nbsp;&nbsp; $\circ$ As defined by its gravitational field rather than its topography [^2]
:::

::: {.fragment .fade-in data-fragment-index=4 style="font-size:0.6em"}    
&nbsp;&nbsp;&nbsp; $\circ$ Gravitational field found by finding equipotential surfaces
:::

::: {.fragment .fade-in data-fragment-index=4 style="font-size:0.6em"}    
&nbsp;&nbsp;&nbsp; $\circ$ _The_ geoid is the specific equipotential surface that best approximates
mean sea level (MSL) on a global basis
::: 

::: {.fragment .fade-in data-fragment-index=4 style="font-size:0.6em"}    
&nbsp;&nbsp;&nbsp; $\circ$ MSL diverges from the geoid by up to 2 m in places.
::: 

:::

::: {.column width="60%"}
::: {r-stack}
::: {.fragment .fade-in-then-out data-fragment-index=3}
![](img/Gravitational_field_Earth_lines_2.png){style="position: absolute; right: 0px"}
:::

::: {.fragment .fade-in-then-out data-fragment-index=4}
![](img/Gravity_anomalies_on_Earth.jpg){style="position: absolute; right: 0px; width: 250px"}
:::


:::
:::


[^2]: [Janssen, Volker. "Understanding coordinate reference systems, datums and transformations." (2009).](https://figshare.utas.edu.au/articles/journal_contribution/Understanding_coordinate_reference_systems_datums_and_transformations/22873136/1?file=40609577)


## Spheroids and Geoids {.columns .smaller style="font-size:0.6em"}

::: {.column width="40%"}

::: {.fragment .fade-in data-fragment-index=1}
The geoid is pretty complex... 
:::

::: {.fragment .fade-in data-fragment-index=2}
so the surface is approximated using a  _spheroid_ (also called an ellipsoid of revolution) 
:::

::: {.fragment .fade-in data-fragment-index=3}
Some spheroids are suited for global use, others for local use
:::

:::

::: {.column width="60%"}
::: {.r-stack}

::: {.fragment .fade-in-then-out data-fragment-index=1}
![](img/Gravity_anomalies_on_Earth.jpg){style="width: 300px; height: auto;"}
:::

::: {.fragment .fade-in-then-out data-fragment-index=2}
![](https://upload.wikimedia.org/wikipedia/commons/b/bd/Constructie_ellipso%C3%AFde.gif?20070313202411){style="width: 300px; height: auto;"}
:::

::: {.fragment .fade-in data-fragment-index=3}
![](img/several_ellipsoids.png){style="width: 300px; height: auto;"}
:::
:::
:::

## Datums

+ A _datum_ is a spheroid with an origen point and orientation
+ in common parlance they are often used interchangeably

## Projections {.columns}

::: {.column width="50%"}

+ Mathematical formulas for transform 3D Earth to 2D map
+ i.e. project the latitude and longitude to x any coordinates on a plane
+ There are infinite ways to do this, they all cause distortion

:::

::: {.column width="50%"}
![](https://imgs.xkcd.com/comics/map_projections.png){style="max-height: 60vh; width: auto; object-fit: contain;"}
:::

## Projections {.columns}

::: {.column width="50%" .smaller}
::: {r-stack}
::: {.fragment .absolute style="width: 50%" .fade-in-then-out data-fragment-index=1}
Imagine a lightbulb inside of the earth, shining out and projecting the shadows of the continents onto a flattenable surface.
:::

::: {.fragment .absolute style="width: 50%" .fade-in-then-out data-fragment-index=2}
There are three commonly used surfaces 

+ plane
+ cone
+ cylinder
:::

::: {.fragment .absolute style="width: 50%" .fade-in-then-out data-fragment-index=3}
+ The shapes can be oriented in many ways.   
+ Each shape can be in one of two cases _tangent_ and _secant_
:::

::: {.fragment .absolute style="width: 50%; font-size:0.8em" .fade-in-then-out data-fragment-index=4}
Shape and orientation can be chosen to control the type of distortion introduced due to projection
:::

::: {.fragment .absolute style="width: 50%" .fade-in-then-out data-fragment-index=5}
Tissot's indicatrix

    Shows linear, angular, and areal distortions of maps
:::

::: {.fragment .absolute style="width: 50%" .fade-in-then-out data-fragment-index=6}
Equidistant projections

::: {style="font-size:0.7em"}
+ Maintains distance between points in one direction (usually north-south)
+ Angles and shapes are not preserved
+ Good for small-scale maps that cover large areas
+ Often used  for global thematic maps
:::
:::

::: {.fragment .absolute style="width: 50%; font-size:0.8em" .fade-in-then-out data-fragment-index=7}
Conformal map projections

::: {style="font-size:0.7em"}
+ Preserve angles (also known as bearings) between locations
+ Used for navigational purposes
+ Areas tend to be quite distorted
+ Shapes are more or less preserved over small areas, at small scales areas become wildly distorted
+ e.g. Mercator projection is famous for distorting Greenland
:::
:::

::: {.fragment .absolute style="width: 50%; font-size:0.8em" .fade-in-then-out data-fragment-index=8}
Equal area or equivalent projections

::: {style="font-size:0.7em"}
+ Preserve area
+ Distort angles
:::

![](img/File_Equal_Earth_projection_SW.jpg)
![](img/Goode_homolosine_projection_SW.jpg)
:::


::: {.fragment .absolute style="width: 50%; font-size:0.8em" .fade-in-then-out data-fragment-index=9}
Weird projections

::: {style="font-size:0.7em"}
+ Often made as compromises between types of distortion
+ These two were made by architects
![](img/File_Dymaxion_projection.png)
![](img/File_Dymaxion_with_Tissot's_Indicatrices_of_Distortion.svg)
:::

:::

:::
:::


::: {.column width="50%"}
:::{r-stack}
::: {.fragment .fade-in-then-out .absolute data-fragment-index=1}
![](img/projection_concept.png){style="max-height: 80vh; width: auto; object-fit: contain;"}
:::

::: {.fragment .fade-in-then-out .absolute data-fragment-index=2}
![](img/flattenable.png){style="max-height: 80vh; width: auto; object-fit: contain;"}
:::

::: {.fragment .fade-in-then-out .absolute data-fragment-index=3}
![](img/secant-tangent-cases.png){style="max-height: 80vh; width: auto; object-fit: contain;"}
:::

::: {.fragment .fade-in-then-out .absolute data-fragment-index=5}
![](img/Tissot_world_from_space.png){style="max-height: 80vh; width: auto; object-fit: contain;"}
![](img/Tissot_mercator.png){style="max-height: 80vh; width: auto; object-fit: contain;"}
[Left: circles of equal area on globe. Right: same circles on Mercator projection.]{style="font-size:0.3em"}
:::

::: {.fragment .fade-in-then-out .absolute data-fragment-index=6 style="display: flex; flex-direction: column; align-items: center; justify-content: flex-start; gap: 10px; width: 50%; height: 75%; top: 10%;"}
![](img/File_Equirectangular_projection_SW.png){style="max-height: 40vh; width: auto; object-fit: contain;"}
![](img/plate_carree_with_tissots.png){style="max-height: 40vh; width: auto; object-fit: contain;"}
[Top: True-color satellite image of Earth in equirectangular projection.  
Bottom: Equirectangular projection with Tissot's indicatrix.]{style="font-size:0.3em"}
:::

::: {.fragment .fade-in-then-out .absolute data-fragment-index=7}
![](img/mercator_nautical.png){style="max-height: 25vh; width: auto; object-fit: contain;"}
![](img/Tissot_mercator.png){style="max-height: 30vh; width: auto; object-fit: contain;"}  
[Top: Nautical Chart of Lake Superior in Mercator projection. Bottom: Mercator projection.]{style="font-size:0.3em"}
:::


::: {.fragment .fade-in-then-out .absolute data-fragment-index=9 style="display: grid; grid-template-columns: 1fr 1fr; grid-template-rows: 1fr 1fr; gap: 10px; margin-top: 20px;"}
![](img/Waterman_projection.png){style="width: 100%; height: auto; object-fit: contain;"}
![](img/Waterman_Butterfly_with_Tissot's_Indicatrices_of_Distortion.svg.png){style="width: 100%; height: auto; object-fit: contain;"}

:::

:::
:::

##  
Real-time Waterman Wind Map

::: {style="width: 100%; height: 90vh;"}
<iframe src="https://earth.nullschool.net/#current/wind/surface/level/waterman" 
        style="width: 80%; height: 80%; border: none;" 
        title="Real-time Wind Map">
</iframe>  

:::


# Spatial Data Models and Formats

##
MAp Abstraction



# Vector and Raster Data




# Finding Acquiring, Creating, and Editing GIS Data


# GeoProcessing and Vector Operations



# Geospatial Data: Satellites, UAVs, GPS



# Spectral Indices and Tabular Joins



# Spatial Joins, Final Project Discussion


# Spatial Analysis Introduction, Final Project Group Discussions


# Spatial Analysis: Map Algebra, Reprojection, Resampling


# Raster Vector Operations, Zonal Statistics, Point Sampling


# Rasterizing by Attributes, Georeferencing, Statistics 101


# ArcGIS Pro, Spreadsheets


# Web Mapping, Field Data Collection: Mobile sensors and edge devices


# Photogrammetry, Radar, Interferometry

